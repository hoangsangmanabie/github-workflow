on:
  workflow_dispatch:
    inputs:
      release_branch_name:
        description: "enter new release branch"
        required: true
jobs:
  create-new-release-branch:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
        with:
          ref: '${{ github.event.inputs.tag }}'
          fetch-depth: 0
      - name: Check format of new release branch
        env:
          BRANCH: ${{ github.event.inputs.release_branch_name }}
        run: |
          set -e
          . .githooks/common.bash
          $(check_format_release_branch "${BRANCH}")
      - name: Get current release branch
        id: current_release_branch
        run: |
          echo "::set-output name=BRANCH_NAME::release/$(date --date="this Wednesday" '+%Y%m%d')"
      - name: Get all PR of old release branch
        uses: actions/github-script@v4
        id: get_pull_request_numbers
        with: 
          script: |
            let listPRNumber = []
            let limit = 100
            let page = 1
            let url = `/repos/${{ github.repository }}/pulls?per_page=${ limit }&page=${ page }&base=${{ steps.current_release_branch.outputs.BRANCH_NAME }}`
            let result = await github.request(url)
            console.log(result)
            let dataSize = 0

            while (result.data.length != 0) {
              dataSize = result.data.length
              for (let i=0; i < dataSize; i++) {
                listPRNumber.push(result.data[i].number)
              }
              if (dataSize < limit) {
                break
              }
              page++
              url = `/repos/${{ github.repository }}/pulls?per_page=${ limit }&page=${ page }&base=${{ steps.current_release_branch.outputs.BRANCH_NAME }}`
              result = await github.request(url)
            }
            console.log(listPRNumber)
            return listPRNumber
      - name: Create a request change for old pull requests
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            let listPRNumber = ${{ steps.get_pull_request_numbers.outputs.result }}
            let requests = []
            const totalPR = listPRNumber.length
            let url = ""
            for (let i=0;i<totalPR;i++) {
              url = `POST /repos/${{ github.repository }}/pulls/5/reviews`
              requests.push(github.request(url, {
                event: "REQUEST_CHANGES",
                body: `Your current release branch is outdated. You must update your PR's base branch to the new release branch ${{ github.event.inputs.release_branch_name }}`
              }))
            }

            let responses = await Promise.all(requests)
            console.log(responses)
        