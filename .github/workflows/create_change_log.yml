on:
  workflow_dispatch:
jobs:
  create_change_log:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get current release branch
        id: current_release_branch
        run: |
          set -e
          echo "::set-output name=BRANCH_NAME::$(git branch --all --list '*release/20*' | sort -r | head -n 1 | cut -c18-)"

      - name: Get release pull request
        uses: actions/github-script@v4
        id: get_release_pull_request
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const url = `/repos/${{ github.repository }}/pulls?base=develop&head=${{ steps.current_release_branch.outputs.BRANCH_NAME }}`
            const result = await github.request(url)
            console.log(result)
            if (result.data.length != 0) {
              return result.data[0].number
            }
            return 0
          
      - name: Get all PR that has base is current release branch
        uses: actions/github-script@v4
        id: get_all_pr_has_base_is_current_release_branch
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            console.log(${{ github.repository }})
            const limit = 100
            let page = 1
            let listPRNumber = []
            let url = `/search/issues?q=repo:${{ github.repository }}+is:pr+is:merged+base:${{ steps.current_release_branch.outputs.BRANCH_NAME }}&per_page=${limit}&page=${page}`
            let result = await github.request(url)
            console.log(result)
            let dataSize = 0
            while (result.data.length != 0) {
              dataSize = result.data.length
              for (let i=0;i<dataSize;i++) {
                listPRNumber.push(result.data[i].number)
              }
              if (dataSize < limit) {
                break
              }
              page++
              url = `/search/issues?q=repo:${{ github.repository }}+is:pr+is:merged+base:${{ steps.current_release_branch.outputs.BRANCH_NAME }}&per_page=${limit}&page=${page}`
              result = await github.request(url)
              console.log(result)
            }

      - name: Get commit logs
        id: get_commit_logs
        run: |
          GIT_FULL_LOG_STRING=$(git log origin/develop origin/${{ steps.current_release_branch.outputs.BRANCH_NAME }} ^origin/develop)
          GIT_FULL_LOG_STRING="${GIT_FULL_LOG_STRING//'%'/'%25'}"
          GIT_FULL_LOG_STRING="${GIT_FULL_LOG_STRING//$'\n'/'%0A'}"
          GIT_FULL_LOG_STRING="${GIT_FULL_LOG_STRING//$'\r'/'%0D'}"
          echo "::set-output name=GIT_FULL_LOG::$GIT_FULL_LOG_STRING"

          GIT_COMMIT_LOG_STRING=$(git log --format=%s --first-parent origin/develop origin/${{ steps.current_release_branch.outputs.BRANCH_NAME }} ^origin/develop)
          GIT_COMMIT_LOG_STRING="${GIT_COMMIT_LOG_STRING//'%'/'%25'}"
          GIT_COMMIT_LOG_STRING="${GIT_COMMIT_LOG_STRING//$'\n'/'%0A'}"
          GIT_COMMIT_LOG_STRING="${GIT_COMMIT_LOG_STRING//$'\r'/'%0D'}"
          echo "::set-output name=GIT_COMMIT_LOG::$GIT_COMMIT_LOG_STRING"

      - name: Update current PR description
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            console.log(`${{ steps.get_commit_logs.outputs.GIT_COMMIT_LOG }}`)
            const url = `PATCH /repos/${{ github.repository }}/pulls/${{ steps.get_release_pull_request.outputs.result }}`
            const changeLog = 
            `
            Features changes
            ================================================
            ${{ steps.get_commit_logs.outputs.GIT_COMMIT_LOG }}


            All changes
            ================================================
            ${{ steps.get_commit_logs.outputs.GIT_FULL_LOG }}
            `
            const result = await github.request(url, {
              body: changeLog
            })
            console.log(result)